apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-grafana-app
  labels:
    app: go-grafana-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: go-grafana-app
  template:
    metadata:
      labels:
        app: go-grafana-app
    spec:
      containers:
      - name: go-grafana-app
        image: go-grafana-app:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: go-grafana-config
              key: db_host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: go-grafana-config
              key: db_port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: go-grafana-secret
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: go-grafana-secret
              key: db_password
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: go-grafana-config
              key: db_name
        - name: DB_SSL_MODE
          valueFrom:
            configMapKeyRef:
              name: go-grafana-config
              key: db_ssl_mode
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: go-grafana-config
              key: server_port
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: go-grafana-config
              key: log_level
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m" 